import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.ra.budgetplan'
    compileSdk 33

    defaultConfig {
        applicationId "com.ra.budgetplan"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlin.time.ExperimentalTime"]
        kotlinOptions.freeCompilerArgs += ["-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"]
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    /* ~ Start Testing ~ */

    // arch
    testImplementation "androidx.arch.core:core-testing:2.2.0"

    // Mockito 5.3.1
    def nhaarman_mockito = '2.2.0'
    def mockito_inline = '3.5.13'
    def turbine_version = '0.5.2'
    testImplementation "org.mockito:mockito-inline:$mockito_inline"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$nhaarman_mockito"
    testImplementation "app.cash.turbine:turbine:$turbine_version"

    // JUnit5
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.3"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.3"
    // (Optional) if you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    // Junit4
    testImplementation "junit:junit:4.13.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.9.3"

    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    // with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'

    // coroutine
    def coroutines_version = '1.7.3'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation 'app.cash.turbine:turbine:1.0.0'

    /* ~ End Testing ~ */

    def dagger_hilt_version = '2.44'
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-testing:2.42"

    // Timber
    def timber_version = "5.0.1"
    implementation "com.jakewharton.timber:timber:$timber_version"

    // activity & fragment ktx
    def activity_ktx_version = "1.4.0"
    def fragment_ktx_version = '1.5.0'
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    // room database
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // lifecycle
    def lifecycle_ktx_version = '2.6.1'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx_version"

    // chart
    def chart_version = 'v3.1.0'
    implementation "com.github.PhilJay:MPAndroidChart:$chart_version"

    // navigation component
    def version_nav = "2.2.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$version_nav"
    implementation "androidx.navigation:navigation-ui-ktx:$version_nav"

    // datastore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
}